{
  "name": "papaparse",
  "version": "6.0.0-alpha.1",
  "description": "Fast and powerful CSV parser for the browser that supports web workers and streaming large files. Converts CSV to JSON and JSON to CSV.",
  "keywords": [
    "csv",
    "parser",
    "parse",
    "parsing",
    "delimited",
    "text",
    "data",
    "auto-detect",
    "comma",
    "tab",
    "pipe",
    "file",
    "filereader",
    "stream",
    "worker",
    "workers",
    "thread",
    "threading",
    "multi-threaded",
    "jquery-plugin"
  ],
  "homepage": "https://www.papaparse.com/",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mholt/PapaParse.git"
  },
  "author": {
    "name": "Matthew Holt",
    "url": "https://twitter.com/mholt6"
  },
  "license": "MIT",
  "main": "legacy/papaparse.js",
  "browser": "legacy/papaparse.min.js",
  "devDependencies": {
    "@biomejs/biome": "2.1.2",
    "@types/bun": "latest",
    "@types/papaparse": "^5.3.16",
    "chai": "^4.2.0",
    "connect": "^3.3.3",
    "eslint": "^4.19.1",
    "grunt": "^1.5.2",
    "grunt-contrib-uglify": "^5.2.0",
    "mocha": "^5.2.0",
    "mocha-headless-chrome": "^4.0.0",
    "open": "7.0.0",
    "serve-static": "^1.7.1",
    "typescript": "^5"
  },
  "scripts": {
    "lint": "npm run format",
    "build": "grunt build",
    "build-ts": "tsc",
    "test-browser": "node tests/test.js",
    "test-mocha-headless-chrome": "node tests/test.js --mocha-headless-chrome",
    "test-node": "mocha tests/node-tests.js tests/test-cases.js",
    "test-node-new": "PAPA_ENTRY_POINT=../dist/cjs-entry.js mocha --reporter spec tests/node-tests.js tests/test-cases.js --exit",
    "test-node-new-summary": "PAPA_ENTRY_POINT=../dist/cjs-entry.js mocha --reporter min tests/node-tests.js tests/test-cases.js --exit",
    "test": "npm run lint && npm run test-node && npm run test-mocha-headless-chrome",
    "ci": "bun run src/ci/index.ts",
    "ci:foundation": "bun run src/ci/index.ts foundation",
    "ci:benchmark": "bun run src/ci/index.ts benchmark",
    "ci:snapshots:generate": "bun run src/ci/index.ts generate-snapshots",
    "ci:snapshots:validate": "bun run src/ci/index.ts validate-snapshots",
    "ci:api-test": "bun run src/ci/index.ts api-test",
    "ci:all": "bun run src/ci/index.ts all",
    "refactor:test": "npm run ci:foundation",
    "format": "biome format src",
    "format:fix": "biome format --write src"
  },
  "private": true
}
